{"ast":null,"code":"var _jsxFileName = \"/home/k4r4b0/Desktop/Projects/Python/Omnidesk/frontend_new/src/contexts/AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      getCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n  const getCurrentUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      // Clear invalid tokens\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async (username, password) => {\n    try {\n      const response = await authAPI.login(username, password);\n      const {\n        access_token,\n        refresh_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      setUser(userData);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed');\n    }\n  };\n  const register = async (username, email, password) => {\n    try {\n      const response = await authAPI.register(username, email, password);\n      const {\n        access_token,\n        refresh_token,\n        user: userData\n      } = response.data;\n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      setUser(userData);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed');\n    }\n  };\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      setUser(null);\n    }\n  };\n  const updateUser = userData => {\n    setUser(userData);\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authAPI","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","getCurrentUser","response","data","error","console","removeItem","login","username","password","access_token","refresh_token","userData","setItem","_error$response","_error$response$data","message","register","email","_error$response2","_error$response2$data","logout","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/k4r4b0/Desktop/Projects/Python/Omnidesk/frontend_new/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { authAPI, User } from '../services/api';\n\ninterface AuthContextType {\n  user: User | null;\n  loading: boolean;\n  login: (username: string, password: string) => Promise<void>;\n  register: (username: string, email: string, password: string) => Promise<void>;\n  logout: () => void;\n  updateUser: (userData: User) => void;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is logged in on app start\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      getCurrentUser();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  const getCurrentUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      setUser(response.data);\n    } catch (error) {\n      console.error('Failed to get current user:', error);\n      // Clear invalid tokens\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (username: string, password: string): Promise<void> => {\n    try {\n      const response = await authAPI.login(username, password);\n      const { access_token, refresh_token, user: userData } = response.data;\n      \n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      setUser(userData);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Login failed');\n    }\n  };\n\n  const register = async (username: string, email: string, password: string): Promise<void> => {\n    try {\n      const response = await authAPI.register(username, email, password);\n      const { access_token, refresh_token, user: userData } = response.data;\n      \n      localStorage.setItem('access_token', access_token);\n      localStorage.setItem('refresh_token', refresh_token);\n      setUser(userData);\n    } catch (error: any) {\n      throw new Error(error.response?.data?.message || 'Registration failed');\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      setUser(null);\n    }\n  };\n\n  const updateUser = (userData: User) => {\n    setUser(userData);\n  };\n\n  const value: AuthContextType = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}